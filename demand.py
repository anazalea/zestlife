from datetime import date

DEMAND_BY_DAYS_SINCE_JAN01 = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                              1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.01, 1.02, 1.04, 1.04, 1.04, 1.04,
                              1.04, 1.04, 1.04, 1.04, 1.05, 1.05, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.07, 1.07,
                              1.07, 1.07, 1.07, 1.07, 1.07, 1.08, 1.08, 1.08, 1.08, 1.08, 1.08, 1.08, 1.09, 1.09, 1.1,
                              1.1, 1.1, 1.11, 1.11, 1.11, 1.12, 1.12, 1.12, 1.12, 1.11, 1.11, 1.12, 1.13, 1.13, 1.13,
                              1.13, 1.13, 1.13, 1.14, 1.16, 1.16, 1.15, 1.15, 1.16, 1.16, 1.17, 1.18, 1.19, 1.19, 1.19,
                              1.19, 1.19, 1.2, 1.21, 1.21, 1.21, 1.21, 1.21, 1.21, 1.22, 1.22, 1.23, 1.23, 1.22, 1.23,
                              1.23, 1.24, 1.25, 1.26, 1.26, 1.26, 1.26, 1.26, 1.28, 1.29, 1.3, 1.3, 1.29, 1.3, 1.29,
                              1.31, 1.32, 1.32, 1.32, 1.32, 1.33, 1.32, 1.33, 1.34, 1.35, 1.35, 1.34, 1.35, 1.34, 1.36,
                              1.37, 1.37, 1.37, 1.36, 1.37, 1.36, 1.38, 1.39, 1.39, 1.39, 1.38, 1.39, 1.39, 1.41, 1.42,
                              1.43, 1.43, 1.43, 1.43, 1.43, 1.44, 1.45, 1.46, 1.46, 1.45, 1.46, 1.46, 1.47, 1.48, 1.48,
                              1.48, 1.47, 1.47, 1.46, 1.47, 1.48, 1.48, 1.48, 1.47, 1.46, 1.45, 1.46, 1.47, 1.47, 1.47,
                              1.46, 1.46, 1.45, 1.46, 1.47, 1.46, 1.46, 1.45, 1.45, 1.44, 1.44, 1.45, 1.44, 1.44, 1.43,
                              1.43, 1.42, 1.42, 1.43, 1.42, 1.42, 1.4, 1.4, 1.38, 1.39, 1.39, 1.37, 1.37, 1.36, 1.34,
                              1.32, 1.33, 1.33, 1.32, 1.32, 1.31, 1.3, 1.28, 1.28, 1.28, 1.27, 1.27, 1.26, 1.25, 1.24,
                              1.24, 1.24, 1.23, 1.23, 1.22, 1.21, 1.2, 1.2, 1.21, 1.19, 1.19, 1.18, 1.18, 1.17, 1.17,
                              1.17, 1.16, 1.16, 1.15, 1.14, 1.14, 1.14, 1.14, 1.13, 1.13, 1.12, 1.12, 1.12, 1.12, 1.12,
                              1.11, 1.11, 1.1, 1.1, 1.09, 1.09, 1.09, 1.08, 1.08, 1.08, 1.07, 1.07, 1.07, 1.07, 1.07,
                              1.07, 1.06, 1.06, 1.06, 1.06, 1.06, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.04, 1.04,
                              1.04, 1.04, 1.04, 1.04, 1.04, 1.03, 1.03, 1.03, 1.03, 1.03, 1.03, 1.03, 1.02, 1.02, 1.02,
                              1.02, 1.02, 1.02, 1.02, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1.01,
                              1.01, 1.01, 1.01, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                              1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                              1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]


# looks something like this
# 1.5         __
#           /   \
#         /      \
# 1.0 __/         \__
#     Jan    Jul  Dec

def demand_seasonality(dt: date) -> float:
    days_since_jan01 = (dt - date(dt.year, 1, 1)).days
    try:
        return DEMAND_BY_DAYS_SINCE_JAN01[days_since_jan01]
    except Exception as e:
        print(e)
        return 1.


if __name__ == '__main__':
    import matplotlib.pyplot as plt
    from datetime import timedelta

    dates = [date(2000, 1, 1) + timedelta(days=d) for d in range(700)]
    plt.plot(dates, [demand_seasonality(dt) for dt in dates])
    plt.show()
